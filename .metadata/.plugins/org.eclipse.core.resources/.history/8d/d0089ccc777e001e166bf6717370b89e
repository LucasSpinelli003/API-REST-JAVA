package br.com.fiap.banco.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import br.com.fiap.banco.model.ContatoSegurado;
import br.com.fiap.banco.model.Segurado;

public class ContatoSeguradoDao {

	private Connection conn;

	public ContatoSeguradoDao(Connection conn) {
		super();
		this.conn = conn;
	}
	
	public List<ContatoSegurado> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from t_sip_contato_segurado");

		ResultSet result = stm.executeQuery();

		List<ContatoSegurado> lista = new ArrayList<ContatoSegurado>();

		while (result.next()) {
			ContatoSegurado contatoSegurado = parse(result);
			lista.add(contatoSegurado);
		}
		return lista;
	}
	
	private ContatoSegurado parse(ResultSet result) throws SQLException {
		int id = result.getInt("id_contato_segurado");
		int idSegurado = result.getInt("id_segurado");
		String telefone = result.getString("telefone");
		String email = result.getString("email");
		
		ContatoSegurado contatoSegurado = new ContatoSegurado(id,telefone,email);
		
		if (idSegurado != 0) {
			Segurado segurado = new Segurado();
			segurado.setId(idSegurado);
			contatoSegurado.setSegurado(segurado);
		}	
		return contatoSegurado;
	}
	
	public void cadastrar(ContatoSegurado contatoSegurado) throws ClassNotFoundException, SQLException {

		// Criar o objeto com o comando SQL configuravel
		PreparedStatement stm = conn.prepareStatement(
				"INSERT INTO" + " T_SIP_CONTATO_SEGURADO (id_segurado, id_endereco_segurado, id_contato_segurado,"
						+ " , nome_completo, data_nascimento, rg,cpf) " + "values (?, ?, ?, ?)");

		// Setar os valores no comando SQL
		stm.setInt(1, contatoSegurado.getId());
		stm.setInt(2, contatoSegurado.getSegurado().getId());
		stm.setString(3, contatoSegurado.getTelefone());
		stm.setString(4, contatoSegurado.getEmail());
		// Executar o comando SQL
		stm.executeUpdate();
	}

	
}
