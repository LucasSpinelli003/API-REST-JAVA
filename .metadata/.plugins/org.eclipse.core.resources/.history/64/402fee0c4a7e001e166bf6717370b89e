package br.com.fiap.banco.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import br.com.fiap.banco.model.Chamado;
import br.com.fiap.banco.model.ContatoSegurado;
import br.com.fiap.banco.model.EnderecoChamado;
import br.com.fiap.banco.model.EnderecoSegurado;
import br.com.fiap.banco.model.Segurado;
import br.com.fiap.banco.model.Veiculo;

public class SeguradoDao {
	
	private Connection conn;
	
	public SeguradoDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public List<Segurado> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from t_sip_segurado");

		ResultSet result = stm.executeQuery();

		List<Segurado> lista = new ArrayList<Segurado>();

		while (result.next()) {
			Segurado segurado = parse(result);
			lista.add(segurado);
		}
		return lista;
	}
	
	private Segurado parse(ResultSet result) throws SQLException {
		int id = result.getInt("id_segurado");
		int idEnderecoSegurado = result.getInt("id_endereco_segurado");
		int idContatoSegurado = result.getInt("id_contato_segurado");
		String nomeCompleto = result.getString("nome_completo");
		LocalDateTime dataNascimento = result.getObject("data_nascimento", LocalDateTime.class);
		String rg = result.getString("rg");
		String cpf = result.getString("cpf");
		
		Segurado segurado = new Segurado(id,nomeCompleto,rg,cpf,dataNascimento);
		
		if (idEnderecoSegurado != 0) {
			EnderecoSegurado enderecoSegurado = new EnderecoSegurado();
			enderecoSegurado.setId(idEnderecoSegurado);
			segurado.setEnderecoSegurado(enderecoSegurado);
		}
		if (idContatoSegurado != 0) {
			ContatoSegurado contatoSegurado = new ContatoSegurado();
			contatoSegurado.setId(idContatoSegurado);
			segurado.setContatoSegurado(contatoSegurado);
		}
		
		return segurado;
	}
	
	public void cadastrar(Chamado chamado) throws ClassNotFoundException, SQLException {

		// Criar o objeto com o comando SQL configuravel
		PreparedStatement stm = conn.prepareStatement("INSERT INTO" + " T_SIP_CHAMADO (id_chamado, id_segurado, id_endereco_segurado,"
				+ " , id_contato_segurado, id_info_veiculo, id_endereco_chamado,descricao, data_chamado) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?)");

		// Setar os valores no comando SQL
		stm.setInt(1, chamado.getId());
		stm.setInt(2, chamado.getSegurado().getId());
		stm.setInt(3, chamado.getEnderecoSegurado().getId());
		stm.setInt(4, chamado.getContatoSegurado().getId());
		stm.setInt(5, chamado.getVeiculo().getId());
		stm.setInt(6, chamado.getEnderecoChamado().getId());
		stm.setString(7, chamado.getDescricao());
		stm.setObject(8, chamado.getDataCadastro());
		// Executar o comando SQL
		stm.executeUpdate();
	}
	
}
