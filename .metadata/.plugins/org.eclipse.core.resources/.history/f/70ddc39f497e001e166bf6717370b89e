package br.com.fiap.banco.service;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

import br.com.fiap.banco.dao.CategoriaDao;
import br.com.fiap.banco.dao.ChamadoDao;
import br.com.fiap.banco.dao.ProdutoDao;
import br.com.fiap.banco.dao.SeguradoDao;
import br.com.fiap.banco.exception.BadInfoException;
import br.com.fiap.banco.exception.IdNotFoundException;
import br.com.fiap.banco.factory.ConnectionFactory;
import br.com.fiap.banco.model.Categoria;
import br.com.fiap.banco.model.Chamado;
import br.com.fiap.banco.model.Produto;
import br.com.fiap.banco.model.Segurado;
import br.com.fiap.banco.model.Veiculo;

public class SeguradoService {

	private ProdutoDao produtoDao;
	private CategoriaDao categoriaDao;
	private ChamadoDao chamadoDao;
	private SeguradoDao seguradoDao;
	
	public SeguradoService() throws ClassNotFoundException, SQLException {
		Connection conn = ConnectionFactory.getConnection();
		produtoDao = new ProdutoDao(conn);
		categoriaDao = new CategoriaDao(conn);
		chamadoDao = new ChamadoDao(conn);
		seguradoDao = new SeguradoDao(conn);
	}
	
	/*
	 * public void cadastrar(Produto produto) throws ClassNotFoundException,
	 * SQLException, BadInfoException { validar(produto);
	 * produtoDao.cadastrar(produto); }
	 */
	
	public void cadastrar(Chamado chamado) throws ClassNotFoundException, SQLException, BadInfoException {
		//validar(produto);
		chamadoDao.cadastrar(chamado);
	}

	private void validar(Segurado segurado) throws BadInfoException {
		//Implementar algumas regras:
		//Nome obrigatorio e nao pode ter mais do que 50 caracteres
		if (segurado.getNome() == null || segurado.getNome().length() > 50) {
			throw new BadInfoException("Nome invalido, nao pode ser nulo e no maximo 50 caracteres");
		}
	}
	
	public void atualizar(Chamado chamado) throws ClassNotFoundException, SQLException, IdNotFoundException, BadInfoException {
		//validar(produto);
		chamadoDao.atualizar(chamado);
	}
	
	public void remover(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {
		chamadoDao.remover(id);
	}
	
	//public List<Produto> listar() throws ClassNotFoundException, SQLException{
	//	return produtoDao.listar();
	//}
	public List<Segurado> listar() throws ClassNotFoundException, SQLException{
		return seguradoDao.listar();
	}
	
	public List<Produto> pesquisarPorNome(String nome) throws SQLException{
		return produtoDao.pesquisarPorNome(nome);
	}
	
	public Produto pesquisar(int codigo) throws ClassNotFoundException, SQLException, IdNotFoundException{
		Produto p = produtoDao.pesquisar(codigo);
		//Recuperar a categoria do produto, se existir
		if (p.getCategoria() != null) {
			Categoria c = categoriaDao.pesquisar(p.getCategoria().getCodigo());
			p.setCategoria(c);
		}
		return p;
	}

}